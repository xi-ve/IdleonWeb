name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Skip if the commit is from the GitHub Actions bot (to prevent infinite loops)
jobs:
  # Check if we should run tests
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Check commit author
        id: check
        run: |
          if [[ "${{ github.actor }}" == "github-actions[bot]" ]] && [[ "${{ github.event.head_commit.message }}" == *"Bump version"* ]]; then
            echo "should-run=false"
            echo "Skipping tests for version bump commit by GitHub Actions bot"
          else
            echo "should-run=true"
            echo "Running tests for user commit"
          fi

  test-arch:
    needs: check-commit
    if: needs.check-commit.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Clean Docker cache
        run: |
          docker system prune -f
          docker builder prune -f
      
      - name: Run Arch Linux tests
        run: |
          cd integration_tests
          docker compose --profile arch-test up --build --force-recreate --exit-code-from test-arch

  test-ubuntu:
    needs: check-commit
    if: needs.check-commit.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Clean Docker cache
        run: |
          docker system prune -f
          docker builder prune -f
      
      - name: Run Ubuntu tests
        run: |
          cd integration_tests
          docker compose --profile ubuntu-test up --build --force-recreate --exit-code-from test-ubuntu

  test-windows:
    needs: check-commit
    if: needs.check-commit.outputs.should-run == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          cd core && npm install && cd ..
      
      - name: Create test directories
        shell: cmd
        run: |
          if not exist core mkdir core
          if not exist plugins mkdir plugins
          if not exist webui mkdir webui
          echo "Test directories ready"
      
      - name: Run Windows tests
        shell: cmd
        run: |
          python integration_tests/run_tests.py windows

  test-all-platforms:
    needs: [check-commit, test-arch, test-ubuntu, test-windows]
    if: needs.check-commit.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Show test summary
        run: |
          echo "=================================================="
          echo "Integration Tests Summary"
          echo "=================================================="
          echo "All platform tests completed successfully!"
          echo ""
          echo "Test Results:"
          echo "- Arch Linux: ✅ PASS"
          echo "- Ubuntu: ✅ PASS" 
          echo "- Windows: ✅ PASS"
          echo ""
          echo "All integration tests passed across all platforms!" 